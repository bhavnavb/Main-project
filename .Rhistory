library("mongolite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library(devtools)
require(twitteR)
require(RCurl)
library(twitteR)
library(rjson)
library(httr)
library(plyr)
library(ggplot2)
library(RColorBrewer)
library(plyr)
library(bit64)
library(jsonlite)
library(mongolite)
consumer_key <- 'DCwPpxjDJSD2cy6ApeSIV780y'
consumer_secret <- 'HWlMrPLgILs055BcMESvC6VuHSrGVbOkhbUfEcXjKbLzqkLYSz'
access_token <- '3650112554-vapqSRrXEfmgygQTvZdwSCHNJ4oqpsdpZDsVsxI'
access_secret <- '4d5XS8LN7B8g5WrNJN2Hf35XQXe2hjrXdJIlEbLTkcMwe'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
consumer_key <- 'ZwPK8D9hTRGVJrPc4msHQdrMH'
consumer_secret <- 'BV8eHfDGRxE8LhWn17qL26bYKBzA9juL4kL6ohEEv3CtwkD4Ji'
access_token <- '3814635013-WBR42YvxroCxmrApWJOdMJwpSc0Oa11GY9ACtmB'
access_secret <- 'nBLNAJaviI0oPlpXszvFa14BnpU1et1qlPPsEInZ6lJLc'
setup_twitter_oauth(consumer_key,consumer_secret,access_token,access_secret)
orioles.tweets <- searchTwitter('#orioles', n=15, lang="en")
yankees.tweets <- searchTwitter('#yankees', n=15, lang="en")
bluejays.tweets <- searchTwitter('#bluejays', n=15, lang="en")
rays.tweets <- searchTwitter('#rays', n=15, lang="en")
redsox.tweets <- searchTwitter('#redsox', n=15, lang="en")
orioles.text=laply(orioles.tweets,function(t) t$getText())
yankees.text=laply(yankees.tweets,function(t) t$getText())
redsox.text=laply(redsox.tweets,function(t) t$getText())
bluejays.text=laply(bluejays.tweets,function(t) t$getText())
rays.text=laply(rays.tweets,function(t) t$getText())
df_ya <- as.data.frame(yankees.text)
df_or <- as.data.frame(orioles.text)
df_bl <- as.data.frame(bluejays.text)
df_ra <- as.data.frame(rays.text)
df_red <- as.data.frame(redsox.text)
json_or <- toJSON(orioles.text)
json_ya <- toJSON(yankees.text)
json_bl <- toJSON(bluejays.text)
json_ra <- toJSON(rays.text)
json_red <- toJSON(redsox.text)
m <- mongo("df_or")
m$insert(df_or)
m <- mongo("df_ya")
m$insert(df_ya)
m <- mongo("df_ra")
m$insert(df_ra)
m <- mongo("df_red")
m$insert(df_red)
m <- mongo("df_bl")
m$insert(df_bl)
class(json_or)
m
View(df_bl)
m
json_ya
class(m)
view(m)
show(m)
library("bit", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("bit64", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("caTools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("httr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("plyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("mongolite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("jsonlite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("RCurl", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("twitteR", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("stringr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
m$insert(df_ya)
getd()
getwd()
library("bit64", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("caTools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("httr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("jsonlite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("mongolite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("plyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("RColorBrewer", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("RCurl", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("twitteR", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("stringr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
consumer_key <- 'ZwPK8D9hTRGVJrPc4msHQdrMH'
consumer_secret <- 'BV8eHfDGRxE8LhWn17qL26bYKBzA9juL4kL6ohEEv3CtwkD4Ji'
access_token <- '3814635013-WBR42YvxroCxmrApWJOdMJwpSc0Oa11GY9ACtmB'
access_secret <- 'nBLNAJaviI0oPlpXszvFa14BnpU1et1qlPPsEInZ6lJLc'
setup_twitter_oauth(consumer_key,consumer_secret,access_token,access_secret)
?"as.data.frame"
?data.frame
pos.words <- scan('/home/bhavna/rprog/positive-words.txt', what='character', comment.char=';')
neg.words <- scan('/home/bhavna/rprog/negative-words.txt', what='character', comment.char=';')
orioles.tweets <- searchTwitter('#orioles', n=15, lang="en")
yankees.tweets <- searchTwitter('#yankees', n=15, lang="en")
bluejays.tweets <- searchTwitter('#bluejays', n=15, lang="en")
rays.tweets <- searchTwitter('#rays', n=15, lang="en")
redsox.tweets <- searchTwitter('#redsox', n=15, lang="en")
orioles.text=laply(orioles.tweets,function(t) t$getText())
yankees.text=laply(yankees.tweets,function(t) t$getText())
redsox.text=laply(redsox.tweets,function(t) t$getText())
bluejays.text=laply(bluejays.tweets,function(t) t$getText())
rays.text=laply(rays.tweets,function(t) t$getText())
df_ya <- as.data.frame(yankees.text)
df_or <- as.data.frame(orioles.text)
df_bl <- as.data.frame(bluejays.text)
df_ra <- as.data.frame(rays.text)
df_red <- as.data.frame(redsox.text)
json_or <- toJSON(orioles.text)
json_ya <- toJSON(yankees.text)
json_bl <- toJSON(bluejays.text)
json_ra <- toJSON(rays.text)
json_red <- toJSON(redsox.text)
m <- mongo("df_or")
m$insert(df_or)
m <- mongo("df_ya")
m$insert(df_ya)
m <- mongo("df_ra")
m$insert(df_ra)
m <- mongo("df_red")
m$insert(df_red)
m <- mongo("df_bl")
m$insert(df_bl)
orioles.scores <- score.sentiment(orioles.text, pos.words,
neg.words, .progress='text')
yankees.scores <- score.sentiment(yankees.text, pos.words,
neg.words, .progress='text')
bluejays.scores <- score.sentiment(bluejays.text, pos.words,
neg.words, .progress='text')
rays.scores <- score.sentiment(rays.text, pos.words,
neg.words, .progress='text')
redsox.scores <- score.sentiment(redsox.text, pos.words,
neg.words, .progress='text')
orioles.scores$team = 'Orioles'
orioles.scores$code = 'BAL'
yankees.scores$team = 'Yankees'
yankees.scores$code = 'NYA'
bluejays.scores$team = 'Blue Jays'
bluejays.scores$code = 'TOR'
rays.scores$team = 'Rays'
rays.scores$code = 'TBA'
redsox.scores$team = 'Red Sox'
redsox.scores$code = 'BOS'
aleast.scores = rbind(orioles.scores, yankees.scores, bluejays.scores, rays.scores, redsox.scores)
alcentral.scores = rbind(whitesox.scores, tigers.scores, twins.scores, royals.scores, indians.scores)
alwest.scores = rbind(angels.scores, athletics.scores, mariners.scores, astros.scores, rangers.scores)
nleast.scores = rbind(nationals.scores, mets.scores, braves.scores, marlins.scores, phillies.scores)
nlcentral.scores = rbind(cardinals.scores, pirates.scores, brewers.scores, reds.scores, cubs.scores)
nlwest.scores = rbind(dodgers.scores, giants.scores, padres.scores, rockies.scores, diamondbacks.scores)
ggplot(data=aleast.scores) +
geom_bar(mapping=aes(x=score, fill=team), binwidth=1) +
facet_grid(team~.) +
theme_bw() + scale_color_brewer() +
labs(title="AL East Sentiment")
View(df_bl)
View(df_bl)
View(df_ya)
View(df_ya)
json_ya
m <- mongo("oriolescollection",db="project")
m$insert(df_or)
m <- mongo("oriolescollection",db="project")
m$insert(df_or)
m <- mongo("yankeescollection",db="project")
m$insert(df_ya)
bluejays.tweets <- searchTwitter('#samsung #s6', n=15, lang="en")
library("bit64", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("jsonlite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("httr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("plyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("mongolite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("twitteR", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
consumer_key <- 'ZwPK8D9hTRGVJrPc4msHQdrMH'
consumer_secret <- 'BV8eHfDGRxE8LhWn17qL26bYKBzA9juL4kL6ohEEv3CtwkD4Ji'
access_token <- '3814635013-WBR42YvxroCxmrApWJOdMJwpSc0Oa11GY9ACtmB'
access_secret <- 'nBLNAJaviI0oPlpXszvFa14BnpU1et1qlPPsEInZ6lJLc'
setup_twitter_oauth(consumer_key,consumer_secret,access_token,access_secret)
bluejays.tweets <- searchTwitter('#samsung #s6', n=15, lang="en")
bluejays.tweets
bluejays.tweets <- searchTwitter('#samsung #s6 #galaxy', n=15, lang="en")
bluejays.tweets
orioles.tweets <- searchTwitter('#iphone6', n=15, lang="en")
orioles.tweets
library("bit64", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("caTools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("httr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("jsonlite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("mongolite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("plyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("RCurl", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("RColorBrewer", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("rjson", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
detach("package:rjson", unload=TRUE)
library("stringr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("twitteR", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
consumer_key <- 'ZwPK8D9hTRGVJrPc4msHQdrMH'
consumer_secret <- 'BV8eHfDGRxE8LhWn17qL26bYKBzA9juL4kL6ohEEv3CtwkD4Ji'
access_token <- '3814635013-WBR42YvxroCxmrApWJOdMJwpSc0Oa11GY9ACtmB'
access_secret <- 'nBLNAJaviI0oPlpXszvFa14BnpU1et1qlPPsEInZ6lJLc'
setup_twitter_oauth(consumer_key,consumer_secret,access_token,access_secret)
pos.words <- scan('/home/bhavna/rprog/positive-words.txt', what='character', comment.char=';')
neg.words <- scan('/home/bhavna/rprog/negative-words.txt', what='character', comment.char=';');
iphone.tweets <- searchTwitter('#iphone, n=15, lang="en")
;
.
;
''
;
iphone.tweets <- searchTwitter('#iphone', n=15, lang="en")
library("bit", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("bit64", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("caTools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("git2r", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("httr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("plyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("mongolite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("jsonlite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("RCurl", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("stringr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("twitteR", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
consumer_key <- 'ZwPK8D9hTRGVJrPc4msHQdrMH'
consumer_secret <- 'BV8eHfDGRxE8LhWn17qL26bYKBzA9juL4kL6ohEEv3CtwkD4Ji'
access_token <- '3814635013-WBR42YvxroCxmrApWJOdMJwpSc0Oa11GY9ACtmB'
access_secret <- 'nBLNAJaviI0oPlpXszvFa14BnpU1et1qlPPsEInZ6lJLc'
setup_twitter_oauth(consumer_key,consumer_secret,access_token,access_secret)
consumer_key <- 'ZwPK8D9hTRGVJrPc4msHQdrMH'
consumer_secret <- 'BV8eHfDGRxE8LhWn17qL26bYKBzA9juL4kL6ohEEv3CtwkD4Ji'
access_token <- '3814635013-WBR42YvxroCxmrApWJOdMJwpSc0Oa11GY9ACtmB'
access_secret <- 'nBLNAJaviI0oPlpXszvFa14BnpU1et1qlPPsEInZ6lJLc'
setup_twitter_oauth(consumer_key,consumer_secret,access_token,access_secret)
pos.words <- scan('/home/bhavna/rprog/positive-words.txt', what='character', comment.char=';')
neg.words <- scan('/home/bhavna/rprog/negative-words.txt', what='character', comment.char=';');
iphone.tweets <- searchTwitter('#iphone', n=15, lang="en")
nexus.tweets <- searchTwitter('#nexus', n=15, lang="en")
iphone.text=laply(iphone.tweets,function(t) t$getText())
nexus.text=laply(nexus.tweets,function(t) t$getText())
df_nx <- as.data.frame(nexus.text)
df_ip <- as.data.frame(iphone.text)
json_nx <- toJSON(iphone.text)
json_ip <- toJSON(nexus.text)
m <- mongo("iphonecollection",db="project")
m
m$insert(df_ip)
m$find()
?find()
class(m$find())
df_ip<-m$find()
class(iphone.text)
class(str(df_ip))
class(str(df_ip))
?laply
ipt<-as.list(df_ip)
ipt
class(ipt)
class(iphone.text)
as.character(ipt)
class(as.character(ipt)0
class(as.character(ipt))
ipt<-as.character(ipt)
ipt
iphont.text
iphone.text
iphone.tweets
iphone.text=laply(ipt,function(t) t$getText())
class(iphone.tweets)
ipt<-as.list(ipt)
ipt
df_ip<-m$find()
iphone.scores <- score.sentiment(ipt, pos.words,neg.words, .progress='text')
source("twit.R")
f1()
source("twit.R")
f1()
class(iphone.tweets)
class(iphone.text)
class(df_ip)
class(ipt)
iphone.txt=laply(ipt,function(t) t$getText())
ip.lst<-as.list(t(df_ip))
ip.txt=laply(ip.lst,function(t) t$getText())
ip.lst
iphone.tweets
ip.txt=laply(ip.lst,function(t) t$getText())
ip.txt<-ip$iphone.text()
ip.txt<-ip.lst$iphone.text()
ip.txt=saply(ip.lst,function(t) t$getText())
ip.txt=saaply(ip.lst,function(t) t$getText())
?sapply
ip.txt=sapply(ip.lst,function(t) t$getText())
ip.txt=sapply(ip.lst,function(t) getText(t))
ip.txt=mapply(ip.lst,function(t) t$getText())
class(iphone.tweets[1])
class(iphone.lst[1])
class(ip.lst[1])
class(ip.lst[[1])
class(ip.lst[[1]])
class(iphone.tweets[[1])
class(iphone.tweets[[1]])
df_ip
library("mongolite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("bit64", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
df_ip
library("httr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("plyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("stringr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("twitteR", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
df_ip
consumer_key <- 'ZwPK8D9hTRGVJrPc4msHQdrMH'
consumer_secret <- 'BV8eHfDGRxE8LhWn17qL26bYKBzA9juL4kL6ohEEv3CtwkD4Ji'
access_token <- '3814635013-WBR42YvxroCxmrApWJOdMJwpSc0Oa11GY9ACtmB'
access_secret <- 'nBLNAJaviI0oPlpXszvFa14BnpU1et1qlPPsEInZ6lJLc'
setup_twitter_oauth(consumer_key,consumer_secret,access_token,access_secret)
iphone.text=laply(iphone.tweets,function(t) t$getText())
nexus.text=laply(nexus.tweets,function(t) t$getText())
df_nx <- as.data.frame(nexus.text)
df_ip <- as.data.frame(iphone.text)
library("jsonlite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
iphone.tweets <- searchTwitter('#iphone', n=15, lang="en")
nexus.tweets <- searchTwitter('#nexus', n=15, lang="en")
iphone.text=laply(iphone.tweets,function(t) t$getText())
nexus.text=laply(nexus.tweets,function(t) t$getText())
df_nx <- as.data.frame(nexus.text)
df_ip <- as.data.frame(iphone.text)
m <- mongo("iphonecollection",db="project")
m$insert(df_ip)
df_ip<-m$find()
df_ip
View(df_ip)
View(df_ip)
ip.lst<-as.list(t(df_ip))
tweets <- as.character(df_ip$iphone.text)
tweets
class(tweets)
class(iphone.text)
iphone.scores <- score.sentiment(tweets, pos.words,neg.words, .progress='text')
source("twit.R"")
;s''
'd;'
a:dx.zC.)
""
source("twit.R")
iphone.scores <- score.sentiment(tweets, pos.words,neg.words, .progress='text')
pos.words <- scan('/home/bhavna/rprog/positive-words.txt', what='character', comment.char=';')
neg.words <- scan('/home/bhavna/rprog/negative-words.txt', what='character', comment.char=';');
iphone.scores <- score.sentiment(tweets, pos.words,neg.words, .progress='text')
iphone.scores$team = 'iphone'
iphone.scores$code = 'BAL'
m <- mongo("iphonecollection",db="project")
m$insert(df_ip)
df_ip<-m$find()
ip.txt<- as.character(df_ip$iphone.text)
m<- mongo("nexuscollection",db="project")
m$insert(df_nx)
df_nx<-m$find()
nx.txt<- as.character(df_nx$nexus.text)
library("brew", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("RColorBrewer", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
iphone.scores <- score.sentiment(ip.txt, pos.words,neg.words, .progress='text')
nexus.scores <- score.sentiment(nx.txt, pos.words,neg.words, .progress='text')
iphone.scores$team = 'iphone'
iphone.scores$code = 'BAL'
nexus.scores$team = 'nexus'
nexus.scores$code = 'NYA'
aleast.scores = rbind(iphone.scores, nexus.scores)
ggplot(data=aleast.scores) +
geom_bar(mapping=aes(x=score, fill=team), binwidth=1) +
facet_grid(team~.) +
theme_bw() + scale_color_brewer() +
labs(title="Comparison of sentiment analysis of Nexus and iphones")
}
nexus.tweets
library("bit64", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("httr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("mongolite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("RCurl", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("stringr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("twitteR", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
m <- mongo("iphonecollection",db="project")
df_ip<-m$find()
ip.txt<- as.character(df_ip$iphone.text)
class(ip.txt)
iphone.tweets <- searchTwitter('#iphone', n=15, lang="en")
iphone.text=laply(iphone.tweets,function(t) t$getText())
library("plyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
iphone.text=laply(iphone.tweets,function(t) t$getText())
consumer_key <- 'ZwPK8D9hTRGVJrPc4msHQdrMH'
consumer_secret <- 'BV8eHfDGRxE8LhWn17qL26bYKBzA9juL4kL6ohEEv3CtwkD4Ji'
access_token <- '3814635013-WBR42YvxroCxmrApWJOdMJwpSc0Oa11GY9ACtmB'
access_secret <- 'nBLNAJaviI0oPlpXszvFa14BnpU1et1qlPPsEInZ6lJLc'
setup_twitter_oauth(consumer_key,consumer_secret,access_token,access_secret)
iphone.tweets <- searchTwitter('#iphone', n=15, lang="en")
iphone.text=laply(iphone.tweets,function(t) t$getText())
class(iphone.text)
class(iphone.tweets)
class(iphone.tweets[1])
class(iphone.tweets[[1])
class(iphone.tweets[[1]])
ip.txt<- as.character(df_ip$iphone.text)
library("bit64", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("caTools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("httr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("jsonlite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
detach("package:jsonlite", unload=TRUE)
library("jsonlite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("mongolite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("plyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("RColorBrewer", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("stringr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("twitteR", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
consumer_key <- 'ZwPK8D9hTRGVJrPc4msHQdrMH'
consumer_secret <- 'BV8eHfDGRxE8LhWn17qL26bYKBzA9juL4kL6ohEEv3CtwkD4Ji'
access_token <- '3814635013-WBR42YvxroCxmrApWJOdMJwpSc0Oa11GY9ACtmB'
access_secret <- 'nBLNAJaviI0oPlpXszvFa14BnpU1et1qlPPsEInZ6lJLc'
setup_twitter_oauth(consumer_key,consumer_secret,access_token,access_secret)
m <- mongo("iphonecollection",db="project")
m$insert(df_ip)
df_ip<-m$find()
df_ip<-m$find()
ip.txt<- as.character(df_ip$iphone.text)
df_nx<-m$find()
nx.txt<- as.character(df_nx$nexus.text)
iphone.scores <- score.sentiment(ip.txt, pos.words,neg.words, .progress='text')
score.sentiment = function(sentences, pos.words, neg.words, .progress='none')
score.sentiment = function(sentences, pos.words, neg.words, .progress='none')
{
require(plyr)
require(stringr)
# we got a vector of sentences. plyr will handle a list or a vector as an "l" for us
# we want a simple array of scores back, so we use "l" + "a" + "ply" = laply:
scores = laply(sentences, function(sentence, pos.words, neg.words) {
# clean up sentences with R's regex-driven global substitute, gsub():
sentence = gsub('[[:punct:]]', '', sentence)
sentence = gsub('[[:cntrl:]]', '', sentence)
sentence = gsub('\\d+', '', sentence)
# and convert to lower case:
sentence = tolower(sentence)
# split into words. str_split is in the stringr package
word.list = str_split(sentence, '\\s+')
# sometimes a list() is one level of hierarchy too much
words = unlist(word.list)
# compare our words to the dictionaries of positive & negative terms
pos.matches = match(words, pos.words)
neg.matches = match(words, neg.words)
# match() returns the position of the matched term or NA
# we just want a TRUE/FALSE:
pos.matches = !is.na(pos.matches)
neg.matches = !is.na(neg.matches)
# and conveniently enough, TRUE/FALSE will be treated as 1/0 by sum():
score = sum(pos.matches) - sum(neg.matches)
return(score)
}, pos.words, neg.words, .progress=.progress )
scores.df = data.frame(score=scores, text=sentences)
return(scores.df)
}
iphone.scores <- score.sentiment(ip.txt, pos.words,neg.words, .progress='text')
nexus.scores <- score.sentiment(nx.txt, pos.words,neg.words, .progress='text')
iphone.scores$team = 'iphone'
iphone.scores$code = 'BAL'
nexus.scores$team = 'nexus'
nexus.scores$code = 'NYA'
aleast.scores = rbind(iphone.scores, nexus.scores)
ggplot(data=aleast.scores) +
geom_bar(mapping=aes(x=score, fill=team), binwidth=1) +
facet_grid(team~.) +
theme_bw() + scale_color_brewer() +
labs(title="Comparison of sentiment analysis of Nexus and iphones")
}
iphone.scores <- score.sentiment(ip.txt, pos.words,neg.words, .progress='text')
nexus.scores <- score.sentiment(nx.txt, pos.words,neg.words, .progress='text')
iphone.scores$team = 'iphone'
iphone.scores$code = 'BAL'
nexus.scores$team = 'nexus'
nexus.scores$code = 'NYA'
aleast.scores = rbind(iphone.scores, nexus.scores)
ggplot(data=aleast.scores) +
geom_bar(mapping=aes(x=score, fill=team), binwidth=1) +
facet_grid(team~.) +
theme_bw() + scale_color_brewer() +
labs(title="Comparison of sentiment analysis of Nexus and iphones")
aleast.scores = rbind(iphone.scores, nexus.scores)
iphone.scores$team = 'iphone'
iphone.scores$code = 'BAL'
nexus.scores$team = 'nexus'
nexus.scores$code = 'NYA'
iphone.scores$team = 'iphone'
View(df_ip)
View(df_ip)
m <- mongo("iphonecollection",db="project")
m$insert(df_ip)
aleast.scores = rbind(iphone.scores, nexus.scores)
df_ip_out<-m$find()
ip.txt<- as.character(df_ip_out$iphone.text)
iphone.scores <- score.sentiment(ip.txt, pos.words,neg.words, .progress='text')
iphone.scores()
iphone.scores
class(iphone.scores)
nexus.scores <- score.sentiment(nx.txt, pos.words,neg.words, .progress='text')
iphone.scores$team = 'iphone'
